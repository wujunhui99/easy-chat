// Code generated by goctl. DO NOT EDIT.
// goctl 1.8.3

package handler

import (
	"net/http"

	user "github.com/wujunhui99/easy-chat/apps/user/api/internal/handler/user"
	"github.com/wujunhui99/easy-chat/apps/user/api/internal/svc"

	"github.com/zeromicro/go-zero/rest"
)

func RegisterHandlers(server *rest.Server, serverCtx *svc.ServiceContext) {
	server.AddRoutes(
		[]rest.Route{
			{
				// 用户登入
				Method:  http.MethodPost,
				Path:    "/login",
				Handler: user.LoginHandler(serverCtx),
			},
			{
				// 用户注册
				Method:  http.MethodPost,
				Path:    "/register",
				Handler: user.RegisterHandler(serverCtx),
			},
		},
		rest.WithPrefix("/v1/user"),
	)

	server.AddRoutes(
		rest.WithMiddlewares(
			[]rest.Middleware{serverCtx.JwtParse},
			[]rest.Route{
				{
					// 获取当前账号已登录设备列表
					Method:  http.MethodGet,
					Path:    "/devices",
					Handler: user.GetLoginDevicesHandler(serverCtx),
				},
				{
					// 按手机号或ID查询用户(单条)
					Method:  http.MethodGet,
					Path:    "/find",
					Handler: user.FindUserHandler(serverCtx),
				},
				{
					// 踢下其它设备(仅主设备mobile)
					Method:  http.MethodPost,
					Path:    "/kick",
					Handler: user.KickDeviceHandler(serverCtx),
				},
				{
					// 获取用户信息
					Method:  http.MethodGet,
					Path:    "/me",
					Handler: user.DetailHandler(serverCtx),
				},
			}...,
		),
		rest.WithJwt(serverCtx.Config.JwtAuth.AccessSecret),
		rest.WithPrefix("/v1/user"),
	)

	server.AddRoutes(
		rest.WithMiddlewares(
			[]rest.Middleware{serverCtx.JwtParse},
			[]rest.Route{
				{
					// 退出登录
					Method:  http.MethodGet,
					Path:    "/logout",
					Handler: user.LogoutHandler(serverCtx),
				},
			}...,
		),
		rest.WithJwt(serverCtx.Config.JwtAuth.AccessSecret),
		rest.WithPrefix("/v1/user"),
	)
}
