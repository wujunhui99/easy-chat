# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc
import warnings

import user_pb2 as user__pb2

GRPC_GENERATED_VERSION = '1.70.0'
GRPC_VERSION = grpc.__version__
_version_not_supported = False

try:
    from grpc._utilities import first_version_is_lower
    _version_not_supported = first_version_is_lower(GRPC_VERSION, GRPC_GENERATED_VERSION)
except ImportError:
    _version_not_supported = True

if _version_not_supported:
    raise RuntimeError(
        f'The grpc package installed is at version {GRPC_VERSION},'
        + f' but the generated code in user_pb2_grpc.py depends on'
        + f' grpcio>={GRPC_GENERATED_VERSION}.'
        + f' Please upgrade your grpc module to grpcio>={GRPC_GENERATED_VERSION}'
        + f' or downgrade your generated code using grpcio-tools<={GRPC_VERSION}.'
    )


class UserStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.Ping = channel.unary_unary(
                '/user.User/Ping',
                request_serializer=user__pb2.Request.SerializeToString,
                response_deserializer=user__pb2.Response.FromString,
                _registered_method=True)
        self.Login = channel.unary_unary(
                '/user.User/Login',
                request_serializer=user__pb2.LoginReq.SerializeToString,
                response_deserializer=user__pb2.LoginResp.FromString,
                _registered_method=True)
        self.Register = channel.unary_unary(
                '/user.User/Register',
                request_serializer=user__pb2.RegisterReq.SerializeToString,
                response_deserializer=user__pb2.RegisterResp.FromString,
                _registered_method=True)
        self.CreateAgent = channel.unary_unary(
                '/user.User/CreateAgent',
                request_serializer=user__pb2.CreateAgentReq.SerializeToString,
                response_deserializer=user__pb2.CreateAgentResp.FromString,
                _registered_method=True)
        self.GetUserInfo = channel.unary_unary(
                '/user.User/GetUserInfo',
                request_serializer=user__pb2.GetUserInfoReq.SerializeToString,
                response_deserializer=user__pb2.GetUserInfoResp.FromString,
                _registered_method=True)
        self.FindUser = channel.unary_unary(
                '/user.User/FindUser',
                request_serializer=user__pb2.FindUserReq.SerializeToString,
                response_deserializer=user__pb2.FindUserResp.FromString,
                _registered_method=True)
        self.Logout = channel.unary_unary(
                '/user.User/Logout',
                request_serializer=user__pb2.LogoutReq.SerializeToString,
                response_deserializer=user__pb2.LogoutResp.FromString,
                _registered_method=True)
        self.KickDevice = channel.unary_unary(
                '/user.User/KickDevice',
                request_serializer=user__pb2.KickDeviceReq.SerializeToString,
                response_deserializer=user__pb2.KickDeviceResp.FromString,
                _registered_method=True)
        self.GetLoginDevices = channel.unary_unary(
                '/user.User/GetLoginDevices',
                request_serializer=user__pb2.GetLoginDevicesReq.SerializeToString,
                response_deserializer=user__pb2.GetLoginDevicesResp.FromString,
                _registered_method=True)


class UserServicer(object):
    """Missing associated documentation comment in .proto file."""

    def Ping(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def Login(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def Register(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def CreateAgent(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetUserInfo(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def FindUser(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def Logout(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def KickDevice(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetLoginDevices(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_UserServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'Ping': grpc.unary_unary_rpc_method_handler(
                    servicer.Ping,
                    request_deserializer=user__pb2.Request.FromString,
                    response_serializer=user__pb2.Response.SerializeToString,
            ),
            'Login': grpc.unary_unary_rpc_method_handler(
                    servicer.Login,
                    request_deserializer=user__pb2.LoginReq.FromString,
                    response_serializer=user__pb2.LoginResp.SerializeToString,
            ),
            'Register': grpc.unary_unary_rpc_method_handler(
                    servicer.Register,
                    request_deserializer=user__pb2.RegisterReq.FromString,
                    response_serializer=user__pb2.RegisterResp.SerializeToString,
            ),
            'CreateAgent': grpc.unary_unary_rpc_method_handler(
                    servicer.CreateAgent,
                    request_deserializer=user__pb2.CreateAgentReq.FromString,
                    response_serializer=user__pb2.CreateAgentResp.SerializeToString,
            ),
            'GetUserInfo': grpc.unary_unary_rpc_method_handler(
                    servicer.GetUserInfo,
                    request_deserializer=user__pb2.GetUserInfoReq.FromString,
                    response_serializer=user__pb2.GetUserInfoResp.SerializeToString,
            ),
            'FindUser': grpc.unary_unary_rpc_method_handler(
                    servicer.FindUser,
                    request_deserializer=user__pb2.FindUserReq.FromString,
                    response_serializer=user__pb2.FindUserResp.SerializeToString,
            ),
            'Logout': grpc.unary_unary_rpc_method_handler(
                    servicer.Logout,
                    request_deserializer=user__pb2.LogoutReq.FromString,
                    response_serializer=user__pb2.LogoutResp.SerializeToString,
            ),
            'KickDevice': grpc.unary_unary_rpc_method_handler(
                    servicer.KickDevice,
                    request_deserializer=user__pb2.KickDeviceReq.FromString,
                    response_serializer=user__pb2.KickDeviceResp.SerializeToString,
            ),
            'GetLoginDevices': grpc.unary_unary_rpc_method_handler(
                    servicer.GetLoginDevices,
                    request_deserializer=user__pb2.GetLoginDevicesReq.FromString,
                    response_serializer=user__pb2.GetLoginDevicesResp.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'user.User', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))
    server.add_registered_method_handlers('user.User', rpc_method_handlers)


 # This class is part of an EXPERIMENTAL API.
class User(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def Ping(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/user.User/Ping',
            user__pb2.Request.SerializeToString,
            user__pb2.Response.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def Login(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/user.User/Login',
            user__pb2.LoginReq.SerializeToString,
            user__pb2.LoginResp.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def Register(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/user.User/Register',
            user__pb2.RegisterReq.SerializeToString,
            user__pb2.RegisterResp.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def CreateAgent(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/user.User/CreateAgent',
            user__pb2.CreateAgentReq.SerializeToString,
            user__pb2.CreateAgentResp.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def GetUserInfo(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/user.User/GetUserInfo',
            user__pb2.GetUserInfoReq.SerializeToString,
            user__pb2.GetUserInfoResp.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def FindUser(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/user.User/FindUser',
            user__pb2.FindUserReq.SerializeToString,
            user__pb2.FindUserResp.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def Logout(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/user.User/Logout',
            user__pb2.LogoutReq.SerializeToString,
            user__pb2.LogoutResp.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def KickDevice(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/user.User/KickDevice',
            user__pb2.KickDeviceReq.SerializeToString,
            user__pb2.KickDeviceResp.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def GetLoginDevices(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/user.User/GetLoginDevices',
            user__pb2.GetLoginDevicesReq.SerializeToString,
            user__pb2.GetLoginDevicesResp.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)
