syntax = "proto3";

package user;

option go_package = "./user";

// model
message UserEntity {
  string  id = 1;                // 用户id
  string  avatar = 2;            // 用户头像
  string  nickname = 3;          // 昵称
  string  phone  = 4;            // 手机号码
  int32   status  = 5;           // 是否锁住
  int32   sex = 6;
}

// req 与 resp
message Request {
  string ping = 1;
}

message Response {
  string pong = 1;
}

message LoginReq {
  string  phone = 1;
  string  password = 2;
  string deviceType = 3; // 设备类型
  string deviceName = 4; // 设备名称
}

message LoginResp {
  string Token = 1;
  int64 expire = 2;
}

message RegisterReq{
  string  phone = 1;
  string  nickname = 2;
  string  password = 3;
  string  avatar = 4;
  int32   sex = 5;
  string deviceType = 6; // 设备类型
  string deviceName = 7; // 设备名称
}

message RegisterResp {
  string Token = 1;
  int64 expire = 2;
}

message CreateAgentReq{
  string nickname = 1;
  string avatar = 2;
  string phone = 3;
  int32 sex = 4;
}

message CreateAgentResp {
  string id = 1;
}

message GetUserInfoReq {
  string id = 1;
}

message GetUserInfoResp {
  UserEntity user = 1;
}

message FindUserReq {
  string name = 1;
  string phone = 2;
  repeated string ids = 3;
}

message FindUserResp {
  repeated UserEntity user = 1;
}
message LogoutReq {
  string id = 1;
  string deviceType = 2;
}

message LogoutResp {
  int32 success = 1;
}

message KickDeviceReq {
  string targetDeviceType = 1; // 目标设备类型 (被踢设备)
  string callerUid = 2; // 发起者用户ID(显式传递避免跨进程 context 丢失)
  string callerDeviceType = 3; // 发起者设备类型
}

message KickDeviceResp {
  bool success = 1;
}

// 查询当前账号已登录设备列表
message GetLoginDevicesReq {
  string callerUid = 1; // 查询者用户ID
}

message GetLoginDevicesResp {
  repeated string devices = 1; // 已登录设备类型列表
}

service User {
  rpc Ping(Request) returns (Response);

  rpc Login(LoginReq) returns (LoginResp);

  rpc Register(RegisterReq) returns (RegisterResp);

  rpc CreateAgent(CreateAgentReq) returns (CreateAgentResp);

  rpc GetUserInfo(GetUserInfoReq) returns (GetUserInfoResp);

  rpc FindUser(FindUserReq) returns (FindUserResp);

  rpc Logout(LogoutReq) returns (LogoutResp);

  rpc KickDevice(KickDeviceReq) returns (KickDeviceResp);

  rpc GetLoginDevices(GetLoginDevicesReq) returns (GetLoginDevicesResp);
} 
