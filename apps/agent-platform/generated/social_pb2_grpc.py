# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc
import warnings

import social_pb2 as social__pb2

GRPC_GENERATED_VERSION = '1.70.0'
GRPC_VERSION = grpc.__version__
_version_not_supported = False

try:
    from grpc._utilities import first_version_is_lower
    _version_not_supported = first_version_is_lower(GRPC_VERSION, GRPC_GENERATED_VERSION)
except ImportError:
    _version_not_supported = True

if _version_not_supported:
    raise RuntimeError(
        f'The grpc package installed is at version {GRPC_VERSION},'
        + f' but the generated code in social_pb2_grpc.py depends on'
        + f' grpcio>={GRPC_GENERATED_VERSION}.'
        + f' Please upgrade your grpc module to grpcio>={GRPC_GENERATED_VERSION}'
        + f' or downgrade your generated code using grpcio-tools<={GRPC_VERSION}.'
    )


class socialStub(object):
    """svc
    好友业务：请求好友、通过或拒绝申请、好友列表
    """

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.FriendPutIn = channel.unary_unary(
                '/social.social/FriendPutIn',
                request_serializer=social__pb2.FriendPutInReq.SerializeToString,
                response_deserializer=social__pb2.FriendPutInResp.FromString,
                _registered_method=True)
        self.FriendPutInHandle = channel.unary_unary(
                '/social.social/FriendPutInHandle',
                request_serializer=social__pb2.FriendPutInHandleReq.SerializeToString,
                response_deserializer=social__pb2.FriendPutInHandleResp.FromString,
                _registered_method=True)
        self.FriendPutInList = channel.unary_unary(
                '/social.social/FriendPutInList',
                request_serializer=social__pb2.FriendPutInListReq.SerializeToString,
                response_deserializer=social__pb2.FriendPutInListResp.FromString,
                _registered_method=True)
        self.FriendList = channel.unary_unary(
                '/social.social/FriendList',
                request_serializer=social__pb2.FriendListReq.SerializeToString,
                response_deserializer=social__pb2.FriendListResp.FromString,
                _registered_method=True)
        self.FriendDelete = channel.unary_unary(
                '/social.social/FriendDelete',
                request_serializer=social__pb2.FriendDeleteReq.SerializeToString,
                response_deserializer=social__pb2.FriendDeleteResp.FromString,
                _registered_method=True)
        self.GroupCreate = channel.unary_unary(
                '/social.social/GroupCreate',
                request_serializer=social__pb2.GroupCreateReq.SerializeToString,
                response_deserializer=social__pb2.GroupCreateResp.FromString,
                _registered_method=True)
        self.GroupPutin = channel.unary_unary(
                '/social.social/GroupPutin',
                request_serializer=social__pb2.GroupPutinReq.SerializeToString,
                response_deserializer=social__pb2.GroupPutinResp.FromString,
                _registered_method=True)
        self.GroupPutinList = channel.unary_unary(
                '/social.social/GroupPutinList',
                request_serializer=social__pb2.GroupPutinListReq.SerializeToString,
                response_deserializer=social__pb2.GroupPutinListResp.FromString,
                _registered_method=True)
        self.GroupPutInHandle = channel.unary_unary(
                '/social.social/GroupPutInHandle',
                request_serializer=social__pb2.GroupPutInHandleReq.SerializeToString,
                response_deserializer=social__pb2.GroupPutInHandleResp.FromString,
                _registered_method=True)
        self.GroupList = channel.unary_unary(
                '/social.social/GroupList',
                request_serializer=social__pb2.GroupListReq.SerializeToString,
                response_deserializer=social__pb2.GroupListResp.FromString,
                _registered_method=True)
        self.GroupUsers = channel.unary_unary(
                '/social.social/GroupUsers',
                request_serializer=social__pb2.GroupUsersReq.SerializeToString,
                response_deserializer=social__pb2.GroupUsersResp.FromString,
                _registered_method=True)
        self.MyCreatedGroups = channel.unary_unary(
                '/social.social/MyCreatedGroups',
                request_serializer=social__pb2.MyCreatedGroupsReq.SerializeToString,
                response_deserializer=social__pb2.MyCreatedGroupsResp.FromString,
                _registered_method=True)
        self.MutualFriendCount = channel.unary_unary(
                '/social.social/MutualFriendCount',
                request_serializer=social__pb2.MutualFriendCountReq.SerializeToString,
                response_deserializer=social__pb2.MutualFriendCountResp.FromString,
                _registered_method=True)
        self.GroupUpdate = channel.unary_unary(
                '/social.social/GroupUpdate',
                request_serializer=social__pb2.GroupUpdateReq.SerializeToString,
                response_deserializer=social__pb2.GroupUpdateResp.FromString,
                _registered_method=True)


class socialServicer(object):
    """svc
    好友业务：请求好友、通过或拒绝申请、好友列表
    """

    def FriendPutIn(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def FriendPutInHandle(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def FriendPutInList(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def FriendList(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def FriendDelete(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GroupCreate(self, request, context):
        """群业务：创建群，修改群，群公告，申请群，用户群列表，群成员，申请群，群退出..

        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GroupPutin(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GroupPutinList(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GroupPutInHandle(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GroupList(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GroupUsers(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def MyCreatedGroups(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def MutualFriendCount(self, request, context):
        """共同好友数量（Redis 求交集）
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GroupUpdate(self, request, context):
        """更新群信息（带字段掩码）
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_socialServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'FriendPutIn': grpc.unary_unary_rpc_method_handler(
                    servicer.FriendPutIn,
                    request_deserializer=social__pb2.FriendPutInReq.FromString,
                    response_serializer=social__pb2.FriendPutInResp.SerializeToString,
            ),
            'FriendPutInHandle': grpc.unary_unary_rpc_method_handler(
                    servicer.FriendPutInHandle,
                    request_deserializer=social__pb2.FriendPutInHandleReq.FromString,
                    response_serializer=social__pb2.FriendPutInHandleResp.SerializeToString,
            ),
            'FriendPutInList': grpc.unary_unary_rpc_method_handler(
                    servicer.FriendPutInList,
                    request_deserializer=social__pb2.FriendPutInListReq.FromString,
                    response_serializer=social__pb2.FriendPutInListResp.SerializeToString,
            ),
            'FriendList': grpc.unary_unary_rpc_method_handler(
                    servicer.FriendList,
                    request_deserializer=social__pb2.FriendListReq.FromString,
                    response_serializer=social__pb2.FriendListResp.SerializeToString,
            ),
            'FriendDelete': grpc.unary_unary_rpc_method_handler(
                    servicer.FriendDelete,
                    request_deserializer=social__pb2.FriendDeleteReq.FromString,
                    response_serializer=social__pb2.FriendDeleteResp.SerializeToString,
            ),
            'GroupCreate': grpc.unary_unary_rpc_method_handler(
                    servicer.GroupCreate,
                    request_deserializer=social__pb2.GroupCreateReq.FromString,
                    response_serializer=social__pb2.GroupCreateResp.SerializeToString,
            ),
            'GroupPutin': grpc.unary_unary_rpc_method_handler(
                    servicer.GroupPutin,
                    request_deserializer=social__pb2.GroupPutinReq.FromString,
                    response_serializer=social__pb2.GroupPutinResp.SerializeToString,
            ),
            'GroupPutinList': grpc.unary_unary_rpc_method_handler(
                    servicer.GroupPutinList,
                    request_deserializer=social__pb2.GroupPutinListReq.FromString,
                    response_serializer=social__pb2.GroupPutinListResp.SerializeToString,
            ),
            'GroupPutInHandle': grpc.unary_unary_rpc_method_handler(
                    servicer.GroupPutInHandle,
                    request_deserializer=social__pb2.GroupPutInHandleReq.FromString,
                    response_serializer=social__pb2.GroupPutInHandleResp.SerializeToString,
            ),
            'GroupList': grpc.unary_unary_rpc_method_handler(
                    servicer.GroupList,
                    request_deserializer=social__pb2.GroupListReq.FromString,
                    response_serializer=social__pb2.GroupListResp.SerializeToString,
            ),
            'GroupUsers': grpc.unary_unary_rpc_method_handler(
                    servicer.GroupUsers,
                    request_deserializer=social__pb2.GroupUsersReq.FromString,
                    response_serializer=social__pb2.GroupUsersResp.SerializeToString,
            ),
            'MyCreatedGroups': grpc.unary_unary_rpc_method_handler(
                    servicer.MyCreatedGroups,
                    request_deserializer=social__pb2.MyCreatedGroupsReq.FromString,
                    response_serializer=social__pb2.MyCreatedGroupsResp.SerializeToString,
            ),
            'MutualFriendCount': grpc.unary_unary_rpc_method_handler(
                    servicer.MutualFriendCount,
                    request_deserializer=social__pb2.MutualFriendCountReq.FromString,
                    response_serializer=social__pb2.MutualFriendCountResp.SerializeToString,
            ),
            'GroupUpdate': grpc.unary_unary_rpc_method_handler(
                    servicer.GroupUpdate,
                    request_deserializer=social__pb2.GroupUpdateReq.FromString,
                    response_serializer=social__pb2.GroupUpdateResp.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'social.social', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))
    server.add_registered_method_handlers('social.social', rpc_method_handlers)


 # This class is part of an EXPERIMENTAL API.
class social(object):
    """svc
    好友业务：请求好友、通过或拒绝申请、好友列表
    """

    @staticmethod
    def FriendPutIn(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/social.social/FriendPutIn',
            social__pb2.FriendPutInReq.SerializeToString,
            social__pb2.FriendPutInResp.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def FriendPutInHandle(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/social.social/FriendPutInHandle',
            social__pb2.FriendPutInHandleReq.SerializeToString,
            social__pb2.FriendPutInHandleResp.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def FriendPutInList(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/social.social/FriendPutInList',
            social__pb2.FriendPutInListReq.SerializeToString,
            social__pb2.FriendPutInListResp.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def FriendList(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/social.social/FriendList',
            social__pb2.FriendListReq.SerializeToString,
            social__pb2.FriendListResp.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def FriendDelete(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/social.social/FriendDelete',
            social__pb2.FriendDeleteReq.SerializeToString,
            social__pb2.FriendDeleteResp.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def GroupCreate(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/social.social/GroupCreate',
            social__pb2.GroupCreateReq.SerializeToString,
            social__pb2.GroupCreateResp.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def GroupPutin(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/social.social/GroupPutin',
            social__pb2.GroupPutinReq.SerializeToString,
            social__pb2.GroupPutinResp.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def GroupPutinList(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/social.social/GroupPutinList',
            social__pb2.GroupPutinListReq.SerializeToString,
            social__pb2.GroupPutinListResp.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def GroupPutInHandle(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/social.social/GroupPutInHandle',
            social__pb2.GroupPutInHandleReq.SerializeToString,
            social__pb2.GroupPutInHandleResp.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def GroupList(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/social.social/GroupList',
            social__pb2.GroupListReq.SerializeToString,
            social__pb2.GroupListResp.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def GroupUsers(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/social.social/GroupUsers',
            social__pb2.GroupUsersReq.SerializeToString,
            social__pb2.GroupUsersResp.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def MyCreatedGroups(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/social.social/MyCreatedGroups',
            social__pb2.MyCreatedGroupsReq.SerializeToString,
            social__pb2.MyCreatedGroupsResp.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def MutualFriendCount(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/social.social/MutualFriendCount',
            social__pb2.MutualFriendCountReq.SerializeToString,
            social__pb2.MutualFriendCountResp.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def GroupUpdate(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/social.social/GroupUpdate',
            social__pb2.GroupUpdateReq.SerializeToString,
            social__pb2.GroupUpdateResp.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)
