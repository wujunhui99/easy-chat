// Code generated by goctl. DO NOT EDIT.
// goctl 1.8.3

package handler

import (
	"net/http"

	friend "github.com/wujunhui99/easy-chat/apps/social/api/internal/handler/friend"
	group "github.com/wujunhui99/easy-chat/apps/social/api/internal/handler/group"
	"github.com/wujunhui99/easy-chat/apps/social/api/internal/svc"

	"github.com/zeromicro/go-zero/rest"
)

func RegisterHandlers(server *rest.Server, serverCtx *svc.ServiceContext) {
	server.AddRoutes(
		rest.WithMiddlewares(
			[]rest.Middleware{serverCtx.JwtParse},
			[]rest.Route{
				{
					// 删除好友
					Method:  http.MethodDelete,
					Path:    "/friend",
					Handler: friend.FriendDeleteHandler(serverCtx),
				},
				{
					// 共同好友数量（Redis 求交集）
					Method:  http.MethodGet,
					Path:    "/friend/mutual",
					Handler: friend.MutualFriendCountHandler(serverCtx),
				},
				{
					// 好友申请
					Method:  http.MethodPost,
					Path:    "/friend/putIn",
					Handler: friend.FriendPutInHandler(serverCtx),
				},
				{
					// 好友申请处理
					Method:  http.MethodPut,
					Path:    "/friend/putIn",
					Handler: friend.FriendPutInHandleHandler(serverCtx),
				},
				{
					// 好友申请列表 direction=1 收到的 | 2 发出的
					Method:  http.MethodGet,
					Path:    "/friend/putIns",
					Handler: friend.FriendPutInListHandler(serverCtx),
				},
				{
					// 好友列表
					Method:  http.MethodGet,
					Path:    "/friends",
					Handler: friend.FriendListHandler(serverCtx),
				},
			}...,
		),
		rest.WithJwt(serverCtx.Config.JwtAuth.AccessSecret),
		rest.WithPrefix("/v1/social"),
	)

	server.AddRoutes(
		rest.WithMiddlewares(
			[]rest.Middleware{serverCtx.JwtParse},
			[]rest.Route{
				{
					// 创群
					Method:  http.MethodPost,
					Path:    "/group",
					Handler: group.CreateGroupHandler(serverCtx),
				},
				{
					// 更新群信息（带 update_mask）
					Method:  http.MethodPatch,
					Path:    "/group",
					Handler: group.GroupUpdateHandler(serverCtx),
				},
				{
					// 申请进群
					Method:  http.MethodPost,
					Path:    "/group/putIn",
					Handler: group.GroupPutInHandler(serverCtx),
				},
				{
					// 申请进群处理
					Method:  http.MethodPut,
					Path:    "/group/putIn",
					Handler: group.GroupPutInHandleHandler(serverCtx),
				},
				{
					// 申请进群列表
					Method:  http.MethodGet,
					Path:    "/group/putIns",
					Handler: group.GroupPutInListHandler(serverCtx),
				},
				{
					// 成员列表列表
					Method:  http.MethodGet,
					Path:    "/group/users",
					Handler: group.GroupUserListHandler(serverCtx),
				},
				{
					// 用户群列表
					Method:  http.MethodGet,
					Path:    "/groups",
					Handler: group.GroupListHandler(serverCtx),
				},
				{
					// 我创建的群列表
					Method:  http.MethodGet,
					Path:    "/groups/myCreated",
					Handler: group.MyCreatedGroupsHandler(serverCtx),
				},
			}...,
		),
		rest.WithJwt(serverCtx.Config.JwtAuth.AccessSecret),
		rest.WithPrefix("/v1/social"),
	)
}
